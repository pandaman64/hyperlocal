var searchIndex={};
searchIndex["hyperlocal"] = {"doc":"`hyperlocal` provides Hyper bindings for Unix domain…","i":[[3,"UnixConnector","hyperlocal","the `[UnixConnector]` can be used to construct a…",null,null],[3,"Uri","","A convenience type that can be used to construct Unix…",null,null],[3,"SocketIncoming","","A stream of connections from binding to a socket.",null,null],[11,"bind","","Creates a new `SocketIncoming` binding to provided socket…",0,[[],[["result",["error"]],["error"]]]],[11,"from_listener","","Creates a new `SocketIncoming` from Tokio's `UnixListener`",0,[[["unixlistener"]],["self"]]],[11,"new","","Create a new `[Uri]` from a socket address and a path",1,[[["str"]],["self"]]],[8,"UnixClientExt","","Extention trait for constructing a hyper HTTP client over…",null,null],[11,"unix","","Construct a client which speaks HTTP over a Unix domain…",2,[[],[["client",["unixconnector","body"]],["body"],["unixconnector"]]]],[8,"UnixServerExt","","Extension trait for provisioning a hyper HTTP server over…",null,null],[10,"bind_unix","","Convenience method for constructing a Server listening on…",3,[[],[["result",["builder","error"]],["builder",["socketincoming"]],["error"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"connect","","",4,[[["internal"],["uri"]],[["oneshot",["uri"]],["uri"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",0,[[["unixlistener"]],["self"]]],[11,"clone","","",4,[[["self"]],["unixconnector"]]],[11,"default","","",4,[[],["unixconnector"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"call","","",4,[[["uri"],["self"]]]],[11,"poll_ready","","",4,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_accept","","",0,[[["pin"],["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"drop","","",0,[[["self"],["pin"]]]],[11,"unix","","Construct a client which speaks HTTP over a Unix domain…",2,[[],[["client",["unixconnector","body"]],["body"],["unixconnector"]]]]],"p":[[3,"SocketIncoming"],[3,"Uri"],[8,"UnixClientExt"],[8,"UnixServerExt"],[3,"UnixConnector"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);